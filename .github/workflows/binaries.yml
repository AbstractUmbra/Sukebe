
name: Rust

on:
  push:
    tags:
      - '*'

jobs:
  CD:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - { target: aarch64-unknown-linux-gnu , use-cross: true, name: sukebe-linux-aarch64 }
          - { target: i686-unknown-linux-gnu , use-cross: true, name: sukebe-linux-i686 }
          - { target: x86_64-pc-windows-gnu , use-cross: true, name: sukebe-windows }
          - { target: x86_64-unknown-linux-gnu, name: sukebe-linux }
    steps:
      - uses: actions/checkout@v2
      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> "$GITHUB_ENV"
          echo "PROJECT_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> "$GITHUB_ENV"
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.arch.use-cross }}
          command: build
          args: --release --target=${{ matrix.arch.target }}

      - name: Copy
        shell: bash
        if: ${{ matrix.arch.target != 'x86_64-pc-windows-gnu' }}
        run: |
          cp  target/${{ matrix.arch.target }}/release/${{ env.PROJECT_NAME }} ${{ matrix.arch.name }}

      - name: Copy
        shell: bash
        if: ${{ matrix.arch.target == 'x86_64-pc-windows-gnu' }}
        run: |
            cp  target/${{ matrix.arch.target }}/release/${{ env.PROJECT_NAME }}.exe ${{ matrix.arch.name }}.exe

      - name: Upload package artifact
        uses: actions/upload-artifact@master
        if: ${{ matrix.arch.target != 'x86_64-pc-windows-gnu' }}
        with:
          path: ${{ matrix.arch.name }}

      - name: Upload package artifact
        uses: actions/upload-artifact@master
        if: ${{ matrix.arch.target == 'x86_64-pc-windows-gnu' }}
        with:
          path: ${{ matrix.arch.name }}.exe

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract crate information
        shell: bash
        run: |
            echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> "$GITHUB_ENV"
            echo "PROJECT_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> "$GITHUB_ENV"

      - name: Build
        uses: actions-rs/cargo@v1
        with:
            command: build
            args: --release

      - name: Copy
        shell: bash
        run: |
          cp  target/release/${{ env.PROJECT_NAME }} ${{ env.PROJECT_NAME }}-macos

      - name: Upload package artifact
        uses: actions/upload-artifact@master
        with:
          path: ${{ env.PROJECT_NAME }}-macos


  release:
    needs: [CD, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            view the CHANGELOG.md for full changes
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
